if
	file_getprop("/tmp/aroma-data/menu.prop","selected") == "1"
	then
		ui_print("Installing IronRom T80X");

assert(getprop("ro.product.device") == "chagalllte" || getprop("ro.build.product") == "chagalllte" || getprop("ro.product.name") == "chagalllte" ||
	getprop("ro.product.device") == "chagallwifi" || getprop("ro.build.product") == "chagallwifi" || getprop("ro.product.name") == "chagallwifi" ||
	abort("This package is for \"chagalllte,chagallwifi\" devices; this is a \"" + getprop("ro.product.device") + "\"."););
show_progress(1.000000, 0);
unmount("/system");
unmount("/cache");
unmount("/data");
ui_print(" ");
ui_print(" ");
ui_print("IronRom Installer V3.1");
ui_print(" ");
ui_print(" ");
ui_print(" ");
ui_print(" ");
ui_print("Formatting system...");
ui_print(" ");
format("ext4", "EMMC", "/dev/block/platform/dw_mmc.0/by-name/SYSTEM", "0", "/system");
set_progress(0.100000);
ui_print(" ");
ui_print("Mounting system");
mount("ext4", "EMMC", "/dev/block/mmcblk0p18", "/system");
ui_print("Mounting data");
mount("ext4", "EMMC", "/dev/block/mmcblk0p21", "/data");
ui_print("Mounting cache");
mount("ext4", "EMMC", "/dev/block/mmcblk0p19", "/cache");
set_progress(0.200000);
#-- Format Options
if
	file_getprop("/tmp/aroma/wipe.prop","wipe") == "full"
	then
		ui_print("Full wipe...");
		delete_recursive("/system");
		package_extract_file("iron/scripts/DeleteDataWithoutMedia.sh", "/tmp/DeleteDataWithoutMedia.sh"); 
		set_perm(0, 0, 0777, "/tmp/DeleteDataWithoutMedia.sh");
		run_program("/sbin/busybox", "sh", "/tmp/DeleteDataWithoutMedia.sh");
		delete_recursive("/magisk");
		delete_recursive("/supersu");
		set_progress(0.250000);
endif;	
if
	file_getprop("/tmp/aroma/wipe.prop","wipe") == "clean"
	then
		ui_print("Clean install...");
		delete_recursive("/system");
		delete_recursive("/data");
		delete_recursive("/sdcard");
		delete_recursive("/magisk");
		delete_recursive("/supersu");
		set_progress(0.250000);
endif;
if
	file_getprop("/tmp/aroma/wipe.prop","wipe") == "dirty"
	then
		ui_print("Dirty flash...");
		delete_recursive("/system");
		set_progress(0.250000);
endif;
ui_print("Extracting system...");
ui_print(" ");
package_extract_dir("system", "/system");
set_progress(0.400000);
# Variants
if
	file_getprop("/tmp/aroma/variant.prop","variant") == "t800"
	then
		ui_print("Installing SM-T800 Variant...");
		package_extract_dir("iron/variant/SM-T800/system", "/system");
endif;
if
	file_getprop("/tmp/aroma/variant.prop","variant") == "t805"
	then
		ui_print("Installing SM-T805 Variant...");
		package_extract_dir("iron/variant/SM-T805/system", "/system");
endif;
#Tab S/S2
if
	file_getprop("/tmp/aroma/tabs2.prop","contact") == "t800"
	then
		ui_print("Installing Wifi contacts...");
		package_extract_dir("iron/debloat/Contacts/SM-T800", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","contact") == "t805"
	then
		ui_print("Installing LTE contacts...");
		package_extract_dir("iron/debloat/Contacts/SM-T805", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","contact") == "no"
	then
		ui_print("No contacts installed...");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","launcher") == "stock"
	then
		ui_print("Installing stock launcher...");
		package_extract_dir("iron/launcher/Tab_S", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","launcher") == "tabs2"
	then
		ui_print("Installing Tab s2 launcher...");
		package_extract_dir("iron/launcher/Tab_S2", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","calendar") == "stock"
	then
		ui_print("Installing Tab s calendar...");
		package_extract_dir("iron/debloat/SPlanner/Tab_S", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","calendar") == "tabs2"
	then
		ui_print("Installing Tab s2 calendar...");
		package_extract_dir("iron/debloat/SPlanner/Tab_S2", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","calendar") == "no"
	then
		ui_print("No calendar installed...");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","email") == "stock"
	then
		ui_print("Installing Tab s email...");
		package_extract_dir("iron/debloat/Email/Tab_S", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","email") == "tabs2"
	then
		ui_print("Installing Tab s2 email...");
		package_extract_dir("iron/debloat/Email/Tab_S2", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","email") == "no"
	then
		ui_print("No email installed...");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","files") == "stock"
	then
		ui_print("Installing Tab s Myfiles...");
		package_extract_dir("iron/debloat/Myfiles/Tab_S", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","files") == "tabs2"
	then
		ui_print("Installing Tab s2 Myfiles...");
		package_extract_dir("iron/debloat/Myfiles/Tab_S2", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","files") == "no"
	then
		ui_print("No Myfiles installed...");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","clock") == "stock"
	then
		ui_print("Installing Tab s clock...");
		package_extract_dir("iron/debloat/Clock/Tab_S", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","clock") == "tabs2"
	then
		ui_print("Installing Tab s2 clock...");
		package_extract_dir("iron/debloat/Clock/Tab_S2", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","clock") == "no"
	then
		ui_print("No Clock installed...");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","video") == "stock"
	then
		ui_print("Installing Tab s video...");
		package_extract_dir("iron/debloat/SamsungVideo/Tab_S", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","video") == "tabs2"
	then
		ui_print("Installing Tab s2 video...");
		package_extract_dir("iron/debloat/SamsungVideo/Tab_S2", "/system");
endif;
if
	file_getprop("/tmp/aroma/tabs2.prop","video") == "no"
	then
		ui_print("No Video installed...");
endif;
#Debloat
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.1") == "1"
	then
		ui_print("Installing Allshare...");
		package_extract_dir("iron/debloat/Allshare", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.2") == "1"
	then
		ui_print("Installing ANT...");
		package_extract_dir("iron/debloat/ANT", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.3") == "1"
	then
		ui_print("Installing Calculator...");
		package_extract_dir("iron/debloat/Calculator", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.4") == "1"
	then
		ui_print("Installing Galaxy Appstore...");
		package_extract_dir("iron/debloat/GalaxyApps", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.5") == "1"
	then
		ui_print("Installing Gallery...");
		package_extract_dir("iron/debloat/Gallery", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.6") == "1"
	then
		ui_print("Installing Kidsmode...");
		package_extract_dir("iron/debloat/Kids", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.7") == "1"
	then
		ui_print("Installing Samsung Browser...");
		package_extract_dir("iron/debloat/SamsungBrowser", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.8") == "1"
	then
		ui_print("Installing Samsung Music...");
		package_extract_dir("iron/debloat/SamsungMusic", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.9") == "1"
	then
		ui_print("Installing Sidesync...");
		package_extract_dir("iron/debloat/Sidesync", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.10") == "1"
	then
		ui_print("Installing SmartManager...");
		package_extract_dir("iron/debloat/SmartManager", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.11") == "1"
	then
		ui_print("Installing SMS...");
		package_extract_dir("iron/debloat/SMS", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.12") == "1"
	then
		ui_print("Installing SVoice...");
		package_extract_dir("iron/debloat/SVoice", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.1.13") == "1"
	then
		ui_print("Installing Weather...");
		package_extract_dir("iron/debloat/Weather", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.1") == "1"
	then
		ui_print("Installing Google Books...");
		package_extract_dir("iron/debloat/Books", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.2") == "1"
	then
		ui_print("Installing Google Chrome...");
		package_extract_dir("iron/debloat/Chrome", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.3") == "1"
	then
		ui_print("Installing Google Drive...");
		package_extract_dir("iron/debloat/Drive", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.4") == "1"
	then
		ui_print("Installing Google Games...");
		package_extract_dir("iron/debloat/Games", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.5") == "1"
	then
		ui_print("Installing Google Mail...");
		package_extract_dir("iron/debloat/Gmail", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.6") == "1"
	then
		ui_print("Installing Google Now...");
		package_extract_dir("iron/debloat/Google", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.7") == "1"
	then
		ui_print("Installing Google Plus...");
		package_extract_dir("iron/debloat/GooglePlus", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.8") == "1"
	then
		ui_print("Installing Google Hangouts...");
		package_extract_dir("iron/debloat/Hangouts", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.9") == "1"
	then
		ui_print("Installing Google Maps...");
		package_extract_dir("iron/debloat/Maps", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.10") == "1"
	then
		ui_print("Installing Google Music...");
		package_extract_dir("iron/debloat/MusicGoogle", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.11") == "1"
	then
		ui_print("Installing Google Newsstand...");
		package_extract_dir("iron/debloat/Newsstand", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.12") == "1"
	then
		ui_print("Installing Google Talkback...");
		package_extract_dir("iron/debloat/Talkback", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.13") == "1"
	then
		ui_print("Installing Youtube...");
		package_extract_dir("iron/debloat/Youtube", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.2.14") == "1"
	then
		ui_print("Installing Movies...");
		package_extract_dir("iron/debloat/Video", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.3.1") == "1"
	then
		ui_print("Installing Dropbox...");
		package_extract_dir("iron/debloat/Dropbox", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.3.2") == "1"
	then
		ui_print("Installing Evernote...");
		package_extract_dir("iron/debloat/Evernote", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.3.3") == "1"
	then
		ui_print("Installing Flipboard...");
		package_extract_dir("iron/debloat/Flipboard", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.3.4") == "1"
	then
		ui_print("Installing Hancom Office...");
		package_extract_dir("iron/debloat/Hancom", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.3.5") == "1"
	then
		ui_print("Installing Netflix...");
		package_extract_dir("iron/debloat/Netflix", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.3.6") == "1"
	then
		ui_print("Installing NYTimes...");
		package_extract_dir("iron/debloat/NYTimes", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.3.7") == "1"
	then
		ui_print("Installing Peel Tab...");
		package_extract_dir("iron/debloat/Peel", "/system");
endif;
if
	file_getprop("/tmp/aroma/debloat.prop","item.3.8") == "1"
	then
		ui_print("Installing Travel Agent...");
		package_extract_dir("iron/debloat/Travel", "/system");
endif;
#DATA
ui_print("Extracting data...");
ui_print(" ");
package_extract_dir("data", "/data");
if
	file_getprop("/tmp/aroma/magisk.prop","busybox") == "yes"
	then
		ui_print("Installing Busybox App...");
		package_extract_dir("iron/busybox/app", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","root") == "phhma"
	then
		ui_print("Installing Phh's App...");
		package_extract_dir("iron/root/app", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","xposed") == "xpsma"
	then
		ui_print("Installing Xposed App...");
		package_extract_dir("iron/xposed/app", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","xposed") == "xps"
	then
		ui_print("Installing Xposed App...");
		package_extract_dir("iron/xposed/app", "/data/app");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","magisk") == "yes"
	then
		ui_print("Installing Magiks App...");
		package_extract_dir("iron/magisk/app", "/data/app");
endif;
set_metadata_recursive("/data/app", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644);
set_progress(0.500000);
ui_print("Creating symlinks...");
ui_print(" ");
#SYM
symlink("app_process32", "/system/bin/app_process");
symlink("dalvikvm32", "/system/bin/dalvikvm");
symlink("grep", "/system/bin/egrep");
symlink("grep", "/system/bin/fgrep");
symlink("libGLESv2.so", "/system/lib/libGLESv3.so");
symlink("libOpenCL.so.1.1", "/system/vendor/lib/libOpenCL.so.1");
symlink("libOpenCL.so.1", "/system/vendor/lib/libOpenCL.so");
symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
symlink("/system/etc/wifi/bcmdhd_apsta.bin_a0", "/system/etc/wifi/bcmdhd_apsta.bin_4354_a0");
symlink("/system/etc/wifi/bcmdhd_apsta.bin", "/system/etc/wifi/bcmdhd_apsta.bin_4354_a1");
symlink("/system/etc/wifi/bcmdhd_ibss.bin_a0", "/system/etc/wifi/bcmdhd_ibss.bin_4354_a0");
symlink("/system/etc/wifi/bcmdhd_ibss.bin", "/system/etc/wifi/bcmdhd_ibss.bin_4354_a1");
symlink("/system/etc/wifi/bcmdhd_mfg.bin_a0", "/system/etc/wifi/bcmdhd_mfg.bin_4354_a0");
symlink("/system/etc/wifi/bcmdhd_mfg.bin", "/system/etc/wifi/bcmdhd_mfg.bin_4354_a1");
symlink("/system/etc/wifi/bcmdhd_sta.bin_a0", "/system/etc/wifi/bcmdhd_sta.bin_4354_a0");
symlink("/system/etc/wifi/bcmdhd_sta.bin", "/system/etc/wifi/bcmdhd_sta.bin_4354_a1");
symlink("/system/lib/libapa_jni.so", "/system/app/SapaMonitor/lib/arm/libapa_jni.so");
symlink("/system/lib/libbluetooth_jni.so", "/system/app/Bluetooth/lib/arm/libbluetooth_jni.so");
symlink("/system/lib/libcommonpawrapper.so", "/system/app/RootPA/lib/arm/libcommonpawrapper.so");
symlink("/system/lib/libdefcontainer_jni.so", "/system/priv-app/DefaultContainerService/lib/arm/libdefcontainer_jni.so");
symlink("/system/lib/libjni_emailencryption.so", "/system/app/SecEmail_Tablet/lib/arm/libjni_emailencryption.so");
symlink("/system/lib/libjni_pacprocessor.so", "/system/app/PacProcessor/lib/arm/libjni_pacprocessor.so");
symlink("/system/lib/libprintspooler_jni6.so", "/system/app/SPrintSpooler6/lib/arm/libprintspooler_jni6.so");
symlink("/system/lib/libswiftkeysdk-java.so", "/system/app/SamsungIME/lib/arm/libswiftkeysdk-java.so");
symlink("toolbox", "/system/bin/dd");
symlink("toolbox", "/system/bin/df");
symlink("toolbox", "/system/bin/du");
symlink("toolbox", "/system/bin/getevent");
symlink("toolbox", "/system/bin/iftop");
symlink("toolbox", "/system/bin/ioctl");
symlink("toolbox", "/system/bin/ionice");
symlink("toolbox", "/system/bin/log");
symlink("toolbox", "/system/bin/ls");
symlink("toolbox", "/system/bin/lsof");
symlink("toolbox", "/system/bin/mount");
symlink("toolbox", "/system/bin/nandread");
symlink("toolbox", "/system/bin/newfs_msdos");
symlink("toolbox", "/system/bin/prlimit");
symlink("toolbox", "/system/bin/ps");
symlink("toolbox", "/system/bin/renice");
symlink("toolbox", "/system/bin/sendevent");
symlink("toolbox", "/system/bin/start");
symlink("toolbox", "/system/bin/stop");
symlink("toolbox", "/system/bin/top");
symlink("toolbox", "/system/bin/uptime");
symlink("toolbox", "/system/bin/watchprops");
symlink("toybox", "/system/bin/acpi");
symlink("toybox", "/system/bin/basename");
symlink("toybox", "/system/bin/blockdev");
symlink("toybox", "/system/bin/bzcat");
symlink("toybox", "/system/bin/cal");
symlink("toybox", "/system/bin/cat");
symlink("toybox", "/system/bin/chcon");
symlink("toybox", "/system/bin/chgrp");
symlink("toybox", "/system/bin/chmod");
symlink("toybox", "/system/bin/chown");
symlink("toybox", "/system/bin/chroot");
symlink("toybox", "/system/bin/cksum");
symlink("toybox", "/system/bin/clear");
symlink("toybox", "/system/bin/cmp");
symlink("toybox", "/system/bin/comm");
symlink("toybox", "/system/bin/cp");
symlink("toybox", "/system/bin/cpio");
symlink("toybox", "/system/bin/cut");
symlink("toybox", "/system/bin/date");
symlink("toybox", "/system/bin/dirname");
symlink("toybox", "/system/bin/dmesg");
symlink("toybox", "/system/bin/dos2unix");
symlink("toybox", "/system/bin/echo");
symlink("toybox", "/system/bin/env");
symlink("toybox", "/system/bin/expand");
symlink("toybox", "/system/bin/expr");
symlink("toybox", "/system/bin/fallocate");
symlink("toybox", "/system/bin/false");
symlink("toybox", "/system/bin/find");
symlink("toybox", "/system/bin/free");
symlink("toybox", "/system/bin/getenforce");
symlink("toybox", "/system/bin/getprop");
symlink("toybox", "/system/bin/groups");
symlink("toybox", "/system/bin/head");
symlink("toybox", "/system/bin/hostname");
symlink("toybox", "/system/bin/hwclock");
symlink("toybox", "/system/bin/id");
symlink("toybox", "/system/bin/ifconfig");
symlink("toybox", "/system/bin/inotifyd");
symlink("toybox", "/system/bin/insmod");
symlink("toybox", "/system/bin/kill");
symlink("toybox", "/system/bin/ln");
symlink("toybox", "/system/bin/load_policy");
symlink("toybox", "/system/bin/logname");
symlink("toybox", "/system/bin/losetup");
symlink("toybox", "/system/bin/lsmod");
symlink("toybox", "/system/bin/lsusb");
symlink("toybox", "/system/bin/md5sum");
symlink("toybox", "/system/bin/mkdir");
symlink("toybox", "/system/bin/mknod");
symlink("toybox", "/system/bin/mkswap");
symlink("toybox", "/system/bin/mktemp");
symlink("toybox", "/system/bin/modinfo");
symlink("toybox", "/system/bin/more");
symlink("toybox", "/system/bin/mountpoint");
symlink("toybox", "/system/bin/mv");
symlink("toybox", "/system/bin/netstat");
symlink("toybox", "/system/bin/nice");
symlink("toybox", "/system/bin/nl");
symlink("toybox", "/system/bin/nohup");
symlink("toybox", "/system/bin/od");
symlink("toybox", "/system/bin/paste");
symlink("toybox", "/system/bin/patch");
symlink("toybox", "/system/bin/pgrep");
symlink("toybox", "/system/bin/pidof");
symlink("toybox", "/system/bin/pkill");
symlink("toybox", "/system/bin/pmap");
symlink("toybox", "/system/bin/printenv");
symlink("toybox", "/system/bin/printf");
symlink("toybox", "/system/bin/pwd");
symlink("toybox", "/system/bin/readlink");
symlink("toybox", "/system/bin/realpath");
symlink("toybox", "/system/bin/restorecon");
symlink("toybox", "/system/bin/rm");
symlink("toybox", "/system/bin/rmdir");
symlink("toybox", "/system/bin/rmmod");
symlink("toybox", "/system/bin/route");
symlink("toybox", "/system/bin/runcon");
symlink("toybox", "/system/bin/sed");
symlink("toybox", "/system/bin/seq");
symlink("toybox", "/system/bin/setenforce");
symlink("toybox", "/system/bin/setprop");
symlink("toybox", "/system/bin/setsid");
symlink("toybox", "/system/bin/sha1sum");
symlink("toybox", "/system/bin/sleep");
symlink("toybox", "/system/bin/sort");
symlink("toybox", "/system/bin/split");
symlink("toybox", "/system/bin/stat");
symlink("toybox", "/system/bin/strings");
symlink("toybox", "/system/bin/swapoff");
symlink("toybox", "/system/bin/swapon");
symlink("toybox", "/system/bin/sync");
symlink("toybox", "/system/bin/sysctl");
symlink("toybox", "/system/bin/tac");
symlink("toybox", "/system/bin/tail");
symlink("toybox", "/system/bin/tar");
symlink("toybox", "/system/bin/taskset");
symlink("toybox", "/system/bin/tee");
symlink("toybox", "/system/bin/time");
symlink("toybox", "/system/bin/timeout");
symlink("toybox", "/system/bin/touch");
symlink("toybox", "/system/bin/tr");
symlink("toybox", "/system/bin/true");
symlink("toybox", "/system/bin/truncate");
symlink("toybox", "/system/bin/umount");
symlink("toybox", "/system/bin/uname");
symlink("toybox", "/system/bin/uniq");
symlink("toybox", "/system/bin/unix2dos");
symlink("toybox", "/system/bin/usleep");
symlink("toybox", "/system/bin/vmstat");
symlink("toybox", "/system/bin/wc");
symlink("toybox", "/system/bin/which");
symlink("toybox", "/system/bin/whoami");
symlink("toybox", "/system/bin/xargs");
symlink("toybox", "/system/bin/yes");
symlink("/vendor/lib/egl/libGLES_mali.so", "/system/vendor/lib/libOpenCL.so.1.1");
set_progress(0.600000);
ui_print("Setting Permissions...");
ui_print(" ");
#PERM
set_metadata_recursive("/system", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/androidshmservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:androidshmservice_exec:s0");
set_metadata("/system/bin/apaservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:apaservice_exec:s0");
set_metadata("/system/bin/app_process32", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/at_distributor", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:at_distributor_exec:s0");
set_metadata("/system/bin/auditd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:auditd_exec:s0");
set_metadata("/system/bin/bintvoutservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bintvoutservice_exec:s0");
set_metadata("/system/bin/blkid", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:blkid_exec:s0");
set_metadata("/system/bin/bootanimation", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootanim_exec:s0");
set_metadata("/system/bin/bootchecker", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootchecker_exec:s0");
set_metadata("/system/bin/bugreport", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bugreport_exec:s0");
set_metadata("/system/bin/charon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:charon_exec:s0");
set_metadata("/system/bin/clatd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:clatd_exec:s0");
set_metadata("/system/bin/connfwexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:connfwexe_exec:s0");
set_metadata("/system/bin/cs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:cs_exec:s0");
set_metadata("/system/bin/ddexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ddexe_exec:s0");
set_metadata("/system/bin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
set_metadata("/system/bin/dex2oat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/dhcpcd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dhcp_exec:s0");
set_metadata("/system/bin/dnsmasq", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dnsmasq_exec:s0");
set_metadata("/system/bin/drmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drmserver_exec:s0");
set_metadata("/system/bin/dumpstate", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpstate_exec:s0");
set_metadata("/system/bin/dumpsys", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpsys_exec:s0");
set_metadata("/system/bin/edmaudit", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:edmaudit_exec:s0");
set_metadata("/system/bin/e2fsck", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/epmlogd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:epmlogd_exec:s0");
set_metadata("/system/bin/fingerprintd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fingerprintd_exec:s0");
set_metadata("/system/bin/fsck.exfat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/fsck.f2fs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/fsck_msdos", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/gatekeeperd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:gatekeeperd_exec:s0");
set_metadata("/system/bin/gpsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:gpsd_exec:s0");
set_metadata("/system/bin/hostapd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hostapd_exec:s0");
set_metadata("/system/bin/icd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:icd_exec:s0");
set_metadata("/system/bin/install-recovery.sh", "uid", 0, "gid", 0, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:install_recovery_exec:s0");
set_metadata("/system/bin/installd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:installd_exec:s0");
set_metadata("/system/bin/insthk", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:insthk_exec:s0");
set_metadata("/system/bin/iptables", "uid", 0, "gid", 1000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/ip6tables", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/jackservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:jackservice_exec:s0");
set_metadata("/system/bin/keystore", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:keystore_exec:s0");
set_metadata("/system/bin/lmkd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lmkd_exec:s0");
set_metadata("/system/bin/logcat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logcat_exec:s0");
set_metadata("/system/bin/logd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logd_exec:s0");
set_metadata("/system/bin/logwrapper", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/lpm", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lpm_exec:s0");
set_metadata("/system/bin/macloader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:macloader_exec:s0");
set_metadata("/system/bin/make_ext4fs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/mcDriverDaemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mobicoredaemon_exec:s0");
set_metadata("/system/bin/mdnsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mdnsd_exec:s0");
set_metadata("/system/bin/mediaserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaserver_exec:s0");
set_metadata("/system/bin/mfgloader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mfgloader_exec:s0");
set_metadata("/system/bin/mkfs.exfat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/mtpd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mtp_exec:s0");
set_metadata("/system/bin/ndc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/netd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:netd_exec:s0");
set_metadata("/system/bin/npsmobex", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mobexdaemon_exec:s0");
set_metadata("/system/bin/olsrd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:olsrd_exec:s0");
set_metadata("/system/bin/otp_server", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:otp_server_exec:s0");
set_metadata("/system/bin/patchoat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/ping", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/pppd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ppp_exec:s0");
set_metadata("/system/bin/prepare_param.sh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:prepare_param_sh_file:s0");
set_metadata("/system/bin/racoon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:racoon_exec:s0");
set_metadata("/system/bin/resetreason", "uid", 1000, "gid", 1000, "mode", 0710, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/rild", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rild_exec:s0");
set_metadata("/system/bin/run-as", "uid", 0, "gid", 2000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:runas_exec:s0");
set_metadata("/system/bin/samsungpowersoundplay", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:samsungpowersoundplay_exec:s0");
set_metadata("/system/bin/scranton_RD", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:playready_exec:s0");
set_metadata("/system/bin/scs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:scs_exec:s0");
set_metadata("/system/bin/sdcard", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdcardd_exec:s0");
set_metadata("/system/bin/sdp_cryptod", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdp_cryptod_exec:s0");
set_metadata("/system/bin/secure_storage_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:secure_storage_exec:s0");
set_metadata("/system/bin/servicemanager", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:servicemanager_exec:s0");
set_metadata("/system/bin/sgdisk", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sgdisk_exec:s0");
set_metadata("/system/bin/sh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:shell_exec:s0");
set_metadata("/system/bin/smdexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:smdexe_exec:s0");
set_metadata("/system/bin/ss_conn_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ss_conn_daemon_exec:s0");
set_metadata("/system/bin/ss_kbservice_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ss_kbservice_daemon_exec:s0");
set_metadata("/system/bin/surfaceflinger", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:surfaceflinger_exec:s0");
set_metadata("/system/bin/tc", "uid", 0, "gid", 1000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/tima_dump_log", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tima_dump_exec:s0");
set_metadata("/system/bin/tlc_server", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tlc_server_exec:s0");
set_metadata("/system/bin/toolbox", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:toolbox_exec:s0");
set_metadata("/system/bin/toybox", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:toolbox_exec:s0");
set_metadata("/system/bin/tzdatacheck", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tzdatacheck_exec:s0");
set_metadata("/system/bin/uncrypt", "uid", 0, "gid", 0, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:uncrypt_exec:s0");
set_metadata("/system/bin/vcsFPService", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vcsFPService_exec:s0");
set_metadata("/system/bin/vdc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vdc_exec:s0");
set_metadata("/system/bin/vold", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vold_exec:s0");
set_metadata("/system/bin/wlandutservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wlandutservice_exec:s0");
set_metadata("/system/bin/wpa_supplicant", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wpa_exec:s0");
set_metadata("/system/etc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/auto_pair_devlist.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/bt_did.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/bt_stack.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/dhcpcd", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
set_metadata("/system/etc/dhcpcd/dhcpcd-hooks", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/dhcpcd/dhcpcd-run-hooks", "uid", 1014, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/recovery-from-boot.p", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0);
set_metadata("/system/etc/event-log-tags", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:event_log_tags_file:s0");
set_metadata("/system/etc/init.goldfish.sh", "uid", 0, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.sec.boot.sh", "uid", 0, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:sec-sh_exec:s0");
set_metadata("/system/etc/permissions", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:ppp_system_file:s0");
set_metadata("/system/etc/security", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/security/cacerts", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/security/.drm", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drm_security_system_file:s0");
set_metadata_recursive("/system/lib", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_library_file:s0");
set_metadata_recursive("/system/vendor", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc/nxp", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc/nxp/BargeIn", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc/nxp/mVoIP", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc/nxp/mVoIPFMC", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc/nxp/mVoIPSec", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/egl", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/mediadrm", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/mediadrm/libdrmclearkeyplugin.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/mediadrm/libwvdrmengine.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/media", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/dexdump", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/mlexe", "selabel", "u:object_r:mlexe_exec:s0");
set_metadata("/system/bin/reactived", "selabel", "u:object_r:actlmand_exec:s0");
set_metadata("/system/bin/resize2fs", "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/lib/drm", "selabel", "u:object_r:drm_lib_system_file:s0");
set_progress(0.700000);
ui_print(" ");
ui_print("Extracting boot image...");
ui_print(" ");
#Kernel
if
	file_getprop("/tmp/aroma/kernel.prop","kernel") == "stockt800"
	then
		ui_print("Installing T800 Stock Kernel...");
		package_extract_file("iron/kernel/stockt800.img", "/dev/block/platform/dw_mmc.0/by-name/BOOT");
		set_progress(0.800000);
endif;
if
	file_getprop("/tmp/aroma/kernel.prop","kernel") == "stockt805"
	then
		ui_print("Installing T805 Stock Kernel...");
		package_extract_file("iron/kernel/stockt805.img", "/dev/block/platform/dw_mmc.0/by-name/BOOT");
		set_progress(0.800000);
endif;
if
	file_getprop("/tmp/aroma/kernel.prop","kernel") == "ironstockt800"
	then
		ui_print("Installing T800 IronStock...");
		package_extract_file("iron/kernel/ironstockt800.img", "/dev/block/platform/dw_mmc.0/by-name/BOOT");
		set_progress(0.800000);
endif;
if
	file_getprop("/tmp/aroma/kernel.prop","kernel") == "ironstockt805"
	then
		ui_print("Installing T805 IronStock...");
		package_extract_file("iron/kernel/ironstockt805.img", "/dev/block/platform/dw_mmc.0/by-name/BOOT");
		set_progress(0.800000);
endif;
#SuperSU
if
	file_getprop("/tmp/aroma/magisk.prop","root") == "su"
	then
		package_extract_dir("iron/root", "/tmp/root");
		run_program("/sbin/busybox", "unzip", "/tmp/root/SuperSU-v2.78-SR5.zip", "META-INF/com/google/android/*", "-d", "/tmp/root");
		run_program("/sbin/busybox", "sh", "/tmp/root/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/root/SuperSU-v2.78-SR5.zip");
		ui_print(" ");
#SUD
		set_metadata_recursive("/system/su.d", "uid", 0, "gid", 0, "dmode", 0700, "fmode", 0700, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
endif;
#Magisk
if
	file_getprop("/tmp/aroma/magisk.prop","magisk") == "yes"
	then
		package_extract_dir("iron/magisk", "/temp/magisk");
		run_program("/sbin/busybox", "unzip", "/temp/magisk/Magisk-v9.zip", "META-INF/com/google/android/*", "-d", "/temp/magisk");
		run_program("/sbin/busybox", "sh", "/temp/magisk/META-INF/com/google/android/update-binary", "dummy", "1", "/temp/magisk/Magisk-v9.zip");
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","magisk") == "no"
	then
		ui_print("No magisk installed...");
endif;
#Phh
if
	file_getprop("/tmp/aroma/magisk.prop","root") == "phhma"
	then
		package_extract_dir("iron/root", "/temp/root");
		run_program("/sbin/busybox", "unzip", "/temp/root/phh-superuser-magisk-r266-2.zip", "META-INF/com/google/android/*", "-d", "/temp/root");
		run_program("/sbin/busybox", "sh", "/temp/root/META-INF/com/google/android/update-binary", "dummy", "1", "/temp/root/phh-superuser-magisk-r266-2.zip");
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","root") == "no"
	then
		ui_print("No root installed...");
endif;
#Busybox
if
	file_getprop("/tmp/aroma/magisk.prop","busybox") == "yes"
	then
		package_extract_dir("iron/busybox", "/tmp/busybox");
		run_program("/sbin/busybox", "unzip", "/tmp/busybox/UPDATE-Busybox.Installer.v1.25.1-ALL-signed.zip", "META-INF/com/google/android/*", "-d", "/tmp/busybox");
		run_program("/sbin/busybox", "sh", "/tmp/busybox/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/busybox/UPDATE-Busybox.Installer.v1.25.1-ALL-signed.zip");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","busybox") == "no"
	then
		ui_print("No busybox installed...");
endif;
#Xposed
if
	file_getprop("/tmp/aroma/magisk.prop","xposed") == "xpsma"
	then
		package_extract_dir("iron/xposed", "/temp/xposed");
		run_program("/sbin/busybox", "unzip", "/temp/xposed/xposed-v87.0-sdk23-systemless.zip", "META-INF/com/google/android/*", "-d", "/temp/xposed");
		run_program("/sbin/busybox", "sh", "/temp/xposed/META-INF/com/google/android/update-binary", "dummy", "1", "/temp/xposed/xposed-v87.0-sdk23-systemless.zip");
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","xposed") == "xps"
	then
		package_extract_dir("iron/xposed", "/temp/xposed");
		run_program("/sbin/busybox", "unzip", "/temp/xposed/xposed-v86.2-sdk23-systemless.zip", "META-INF/com/google/android/*", "-d", "/temp/xposed");
		run_program("/sbin/busybox", "sh", "/temp/xposed/META-INF/com/google/android/update-binary", "dummy", "1", "/temp/xposed/xposed-v86.2-sdk23-systemless.zip");
		ui_print(" ");
endif;
if
	file_getprop("/tmp/aroma/magisk.prop","xposed") == "no"
	then
		ui_print("No Xposed installed...");
endif;
ui_print(" ");
delete_recursive("/temp");
delete_recursive("/cache");
delete_recursive("/data/dalvik-cache");
set_progress(0.900000);
ui_print("Umounting Partitions");
unmount("/system");
unmount("/cache");
unmount("/data");
set_progress(1.000000);
endif;
ui_print("IronRom installed");
ui_print("Please Reboot now");
